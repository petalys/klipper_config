####################################################################################
#   macros used for basic printer control
#   MOVE_AND_SOAK - slowly nove the printheard around
#   HOME_WITH_NOZZLE_WIPE - home, wipe nozzle, hnome again
#   SMART_PURGE - move to top right corner, just off the bed, and purge
#   WIPE_NOZZLE - mpove the nozzle to the brush and wipe it
#   M600 - pause printer and move prin head to back right corner
#   BED_MESH_PRINT_AREA - use variables passed from the slicer to limit the mesh size
#   PRINT_START - 
#   PRINT_END   - 
###################################################################################

####################################################################################
#   MOVE_AND_SOAK
#   slowly move the print head around
####################################################################################
[gcode_macro MOVE_AND_SOAK]
gcode:
  G1 Z10 F1000
  G1 X20 Y20 F600  
  G1 Z70 F1000
  G1 X280 Y20 F600  
  G1 Z140 F1000
  G1 X280 Y280 F600  
  G1 Z210 F1000
  G1 X20 Y280 F600  

  G1 X20 Y20 F600  
  G1 Z140 F1000
  G1 X280 Y20 F600  
  G1 Z70 F1000
  G1 X280 Y280 F600  
  G1 Z20 F1000
  G1 X20 Y280 F600  



####################################################################################
#   HOME_WITH_NOZZLE_WIPE
#   Home, then wipe the nozzle, then home again
####################################################################################
[gcode_macro HOME_WITH_NOZZLE_WIPE]
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|int %}
  G28
  M109 S{EXTRUDER_TEMP} 
  WIPE_NOZZLE
  G28   


####################################################################################
#   SMART_PURGE
#   Move the print head to (300,300) and purge
####################################################################################
[gcode_macro SMART_PURGE]
gcode:
 
  G1 X300 Y299.9 F3900
  
  M106 S0
  G1 Z20 F1000
  G1 E50 F300
  M106 S255
  
  G1 Z-1 F1000

  G1 X230 Y299.9 F3900 
  G1 X285 Y299.9 F3900
  G1 X230 Y299.9 F3900 
  G1 X285 Y299.9 F3900
  G1 X230 Y299.9 F3900 
  G1 X285 Y299.9 F3900
  M106 S0
  G1 X230 Y299.9 F7800 
  G1 X285 Y299.9 F7800 
  G1 X230 Y299.9 F7800 
  G1 X285 Y299.9 F7800 
  G1 X230 Y299.9 F7800 
  G1 X285 Y299.9 F7800 
  G1 X230 Y299.9 F7800 
  G1 X285 Y299.9 F7800 
  
  G1 Z10 F1000

 
####################################################################################
#   WIPE_NOZZLE
#   Move the print head to the brush and wipe it several times, slow then fast
#################################################################################### 
[gcode_macro WIPE_NOZZLE]
gcode:
  G1 X285 Y299.9 F3900
  G1 Z-1 F1000
  
  G1 X230 Y299.9 F3900 
  G1 X285 Y299.9 F3900
   
  G1 X230 Y299.9 F3900 
  G1 X285 Y299.9 F3900
  
  G1 X230 Y299.9 F3900 
  G1 X285 Y299.9 F3900
  
  G1 X230 Y299.9 F7800 
  G1 X285 Y299.9 F7800 
  G1 X230 Y299.9 F7800 
  G1 X285 Y299.9 F7800 
  G1 X230 Y299.9 F7800 
  G1 X285 Y299.9 F7800 
  G1 X230 Y299.9 F7800 
  G1 X285 Y299.9 F7800 
  
  
  G1 Z20 F360


####################################################################################
#   M600
#   Pause the printer and move the print head to the back right corner
#################################################################################### 
[gcode_macro M600]
gcode:
	PRINTER_PAUSE 
    {% set X = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set Y = printer.toolhead.axis_maximum.y|float - 5.0 %}
    {% set Z = params.Z|default(30)|float %}
    SAVE_GCODE_STATE NAME=M600_state
	PRINTER_PAUSE
    PAUSE	
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91 
    RESTORE_GCODE_STATE NAME=M600_state


####################################################################################
#   MBED_MESH_PRINT_AREA600
#   limit the bed mesh to the printable ojects
#################################################################################### 
[gcode_macro BED_MESH_PRINT_AREA]
; gcode parameters
variable_parameter_BED_TEMP:60
variable_parameter_EXTRUDER_TEMP:180
variable_parameter_AREA_START_X : 0
variable_parameter_AREA_START_Y : 0
variable_parameter_AREA_END_X : 290
variable_parameter_AREA_END_Y : 290
	
variable_mesh_min_x :20
variable_mesh_min_y :20
variable_mesh_max_x :270
variable_mesh_max_y :270

variable_mesh_size : 5
variable_mesh_area_offset : 5
variable_probe_samples : 3 
gcode:
        {% if (params.AREA_START_X|default(0)|float < params.AREA_END_X|default(0)|float) and (params.AREA_START_Y|default(0)|float < params.AREA_END_Y|default(0)|float) %}
            {% set max_mesh_area = (mesh_max_x|float - mesh_min_x|float)*(mesh_max_y|float - mesh_min_y|float) %}

            {% if params.AREA_START_X|default(0)|float - mesh_area_offset >=  mesh_min_x %}
                {% set mesh_min_x = params.AREA_START_X|default(0)|float - mesh_area_offset %}
            {% endif %}

            {% if params.AREA_START_Y|default(0)|float - mesh_area_offset >=  mesh_min_y %}
                {% set mesh_min_y = params.AREA_START_Y|default(0)|float - mesh_area_offset %}
            {% endif %}

            {% if params.AREA_END_X|default(0)|float + mesh_area_offset <=  mesh_max_x %}
                {% set mesh_max_x = params.AREA_END_X|default(0)|float + mesh_area_offset %}
            {% endif %}

            {% if params.AREA_END_Y|default(0)|float + mesh_area_offset <=  mesh_max_y %}
                {% set mesh_max_y = params.AREA_END_Y|default(0)|float + mesh_area_offset %}
            {% endif %}

            PRINT MSG="Set custom mesh area to ({mesh_min_x},{mesh_min_y}),({mesh_max_x},{mesh_max_y})"

            {% if (params.AREA_END_X|float - params.AREA_START_X|float)*(params.AREA_END_Y|float - params.AREA_START_Y|float) < (max_mesh_area * 0.85) %}
                {% set mesh_size = 5 %}
            {% elif (params.AREA_END_X|float - params.AREA_START_X|float)*(params.AREA_END_Y|float - params.AREA_START_Y|float) < (max_mesh_area * 0.65) %}
                {% set mesh_size = 4 %}
            {% elif (params.AREA_END_X|float - params.AREA_START_X|float)*(params.AREA_END_Y|float - params.AREA_START_Y|float) < (max_mesh_area * 0.20) %}
                {% set mesh_size = 3 %}
            {% endif %}
            PRINT MSG="Set custom mesh matrix to {mesh_size}x{mesh_size}"

            BED_MESH_CALIBRATE mesh_min={mesh_min_x|float},{mesh_min_y|float} mesh_max={mesh_max_x|float},{mesh_max_y|float} probe_count={mesh_size|int},{mesh_size|int} samples={probe_samples|int}
        {% else %}
            PRINT MSG="Invalid custom mesh parameters, probe using default setting"
            BED_MESH_CALIBRATE
        {% endif %}


#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
[gcode_macro PRINT_START]
gcode:

#------Get Variables-----#

  {% set BED_TEMP = params.BED_TEMP|default(60)|int %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|int %}
  {% set ENC_TEMP = params.ENC_TEMP|default(0)|int %}
  {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}


  variable_parameter_AREA_START_X : 20
  variable_parameter_AREA_START_Y : 20
  variable_parameter_AREA_END_X : 270
  variable_parameter_AREA_END_Y : 270
    
  variable_mesh_min_x :20
  variable_mesh_min_y :20
  variable_mesh_max_x :270
  variable_mesh_max_y :270

  variable_mesh_area_offset : 5
  variable_probe_samples : 3
  variable_mesh_size : 5

  SET_FAN_SPEED FAN=exhaust_fan SPEED=0
  SET_FAN_SPEED FAN=nevermore_fan SPEED=.2
#-----Heat soak Bed----#
  RESPOND MSG="Heating Bed..."
  STATUS_HEATING
  G28
  G1 Z20 F3000                   	    ; move nozzle away from bed
  M190 S{BED_TEMP}  					; Wait for Bed Temp

#-----Home and Clear Bed mesh-----#
  BED_MESH_CLEAR
  STATUS_HOMING
  HOME_WITH_NOZZLE_WIPE
  G90
  M83


  SET_FAN_SPEED FAN=nevermore_fan SPEED=1


#------Heat soak chamber if requested-----#
#If the bed is set above 95 we can assume that we are using the printer enclosed and therefore should SOAK the chamber
 # {% if BED_TEMP >= 95 %}                               							; Turn on bed and nevermore fans for ABS and set to 100% until the chamber is at temp
 #   RESPOND MSG="Heating Chamber..."
 #   SET_FAN_SPEED fan=bed_fan SPEED=1.0
 #   SET_FAN_SPEED fan=nevermore SPEED=1.0
#	TEMPERATURE_WAIT SENSOR="temperature_sensor enclosure_temp" MINIMUM=40 MAXIMUM=60  
##  {% endif %}
 # {% if BED_TEMP >= 95 %}															; For ABS set to bed fan and nevermore fans to 50%
 #   SET_FAN_SPEED fan=nevermore SPEED=0.5
#	SET_FAN_SPEED fan=bed_fan SPEED=0.5
#  {% endif %}

#------Quad Gauntry level-----#
  RESPOND MSG="Quad Gauntry Leveling..."
  #STATUS_HOMING
  #G28
  STATUS_LEVELING
  QUAD_GANTRY_LEVEL



#-----Bed Mesh-----#
  BED_MESH_PRINT_AREA AREA_START_X={params.AREA_START_X} AREA_START_Y={params.AREA_START_Y} AREA_END_X={params.AREA_END_X} AREA_END_Y={params.AREA_END_Y} mesh_size={mesh_size}


#-----Heat Soak Extruder-----#
  RESPOND MSG="Heating Extruder..."
  STATUS_HEATING
  G1 Z20 F3000                         ; move nozzle away from bed
  M109 S{EXTRUDER_TEMP}                            ; Wait for Extruder Temp
  #RESPOND MSG="Waiting 30 seconds..."
  #G4 P{60000 * 0.5}                    ; give the nozzel 30 sec to stabilize
  
#-----Auto Z Calibration-----#
  #RESPOND MSG="Auto Z calibration..."
  #STATUS_CLEANING
  #clean_nozzle
  #STATUS_HOMING
  #CALIBRATE_Z


  #RESPOND MSG="Bed mesh measurement..."
  #STATUS_MESHING
  #ADAPTIVE_BED_MESH SIZE={FL_SIZE}		; run calibration routine from macro

#-----Print-----#
  #RESPOND MSG="One last cleaning..."
  #STATUS_CLEANING
  #clean_nozzle
  #RESPOND MSG="Start printing !"
  #STATUS_BUSY
  #G1 X60 Y280 Z0.2 F3000                  ; get ready to prime
  G92 E0                                ; Reset Extruder
  SMART_PURGE

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    
    
    M107                                     ; turn off fan
    
    SET_FAN_SPEED FAN=exhaust_fan SPEED=1
  
 
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[idle_timeout]
gcode:
     SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
    timeout: 600
#   Idle time (in seconds) to wait before running the above G-Code
#   


[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    ## 300 build
    G0 X150 Y150 Z30 F3600

    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32

